/*
 * Copyright (C) 2019 Intel Corporation.  All rights reserved.
 * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
 */

#define WASM_ENABLE_SGX_IPFS 1
#define WASM_ENABLE_LIB_RATS 0

enclave {
    from "sgx_tstdc.edl" import *;
    from "sgx_pthread.edl" import *;
    from "sgx_wamr.edl" import *;
#if WASM_ENABLE_LIB_RATS != 0
    from "rats.edl" import *;
    from "sgx_tsgxssl.edl" import *;
#endif
#if WASM_ENABLE_SGX_IPFS != 0
    from "sgx_tprotected_fs.edl" import *;
#endif

    trusted {
        /* define ECALLs here. */
        public void ecall_handle_command(unsigned cmd,
                                         [in, out, size=cmd_buf_size]uint8_t *cmd_buf,
                                         unsigned cmd_buf_size);
        public void ecall_iwasm_main([user_check]uint8_t *wasm_file_buf,
                                     uint32_t wasm_file_size);
        public void ecall_test_print();
        public void ecall_runtime_checkpoint();
        public void ecall_set_restore_flag();
    };

    untrusted {
        /* define OCALLs here. */
        void ocall_print([in, string]const char* str);
        void ocall_printf_int([in, string]const char* str, uint32_t val);
        void ocall_fprintf_str([in, string]const char* str1, [in, string]const char* str2);
        void ocall_printf_size([in, string]const char* str, size_t val);

        void ocall_exit(int8_t status_num);
        unsigned char* ocall_read_binaryfile([in, string]const char *filename);
        void ocall_print_key([in, count=16] const uint8_t *key);

        void ocall_get_file_size([in, string] const char* filename, [out] uint32_t* ret_size);
        void ocall_read_file([in, string] const char* path, [out] uint8_t* buffer, size_t size, [out] size_t* read_size);
        void ocall_read_file_to_buffer([in, string]const char *filename, uint32_t ret_size, [out, count=ret_size]uint8_t **buffer_out);
        void ocall_write_buffer_to_file([in, string]const char* output_file_name, [in, out, count=buffer_size]uint8_t **buffer, uint32_t buffer_size);
    };
};
